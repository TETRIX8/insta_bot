#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import logging
import tempfile
from pathlib import Path
import yt_dlp
import ffmpeg
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
TEMP_DIR = Path(tempfile.gettempdir()) / "instagram_video_bot"
TEMP_DIR.mkdir(exist_ok=True)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
class Config:
    TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN", "YOUR_TELEGRAM_BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ Instagram.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è, "
        "–∞ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—é –∞—É–¥–∏–æ –∏–∑ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ –∏ –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞."
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help."""
    await update.message.reply_text(
        "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞:\n\n"
        "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –º–Ω–µ\n"
        "3. –î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ –∏ –∏–∑–≤–ª–µ–∫—É –∞—É–¥–∏–æ\n"
        "4. –ü–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—Å—Ç—ã, reels –∏ –∏—Å—Ç–æ—Ä–∏–∏ Instagram."
    )

def is_instagram_url(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL —Å—Å—ã–ª–∫–æ–π –Ω–∞ Instagram."""
    return "instagram.com" in url or "instagr.am" in url

def download_instagram_video(url: str) -> tuple:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –∏–∑ Instagram –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (–ø—É—Ç—å_–∫_–≤–∏–¥–µ–æ, –æ–ø–∏—Å–∞–Ω–∏–µ)
    """
    video_path = TEMP_DIR / f"{hash(url)}.mp4"
    
    ydl_opts = {
        'format': 'best',
        'outtmpl': str(video_path),
        'quiet': True,
        'no_warnings': True,
        'ignoreerrors': False,
    }
    
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        try:
            info = ydl.extract_info(url, download=True)
            description = info.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ')
            return str(video_path), description
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
            raise

def extract_audio(video_path: str) -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
    """
    audio_path = str(Path(video_path).with_suffix('.mp3'))
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ffmpeg –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ
        (
            ffmpeg
            .input(video_path)
            .output(audio_path, acodec='libmp3lame', q=4)
            .run(quiet=True, overwrite_output=True)
        )
        return audio_path
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {e}")
        raise

async def process_instagram_url(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç URL Instagram –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ."""
    url = update.message.text.strip()
    
    if not is_instagram_url(url):
        await update.message.reply_text("–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É –∏–∑ Instagram. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.")
        return
    
    status_message = await update.message.reply_text("–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ Instagram...")
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        video_path, description = download_instagram_video(url)
        
        await status_message.edit_text("–ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ...")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ
        audio_path = extract_audio(video_path)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        if description and description.strip():
            await update.message.reply_text(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ:\n\n{description}")
        else:
            await update.message.reply_text("üìù –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        await status_message.edit_text("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
        with open(video_path, 'rb') as video_file:
            await update.message.reply_video(
                video=video_file,
                caption="–í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –∏–∑ Instagram"
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ
        await status_message.edit_text("–û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ...")
        with open(audio_path, 'rb') as audio_file:
            await update.message.reply_audio(
                audio=audio_file,
                caption="–ê—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ"
            )
        
        await status_message.delete()
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        os.remove(video_path)
        os.remove(audio_path)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL: {e}")
        await status_message.edit_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {str(e)}")

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = Application.builder().token(Config.TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è URL
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, process_instagram_url))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
